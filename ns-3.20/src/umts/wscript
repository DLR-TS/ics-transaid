# -*- Mode: python; py-indent-offset: 4; indent-tabs-mode: nil; coding: utf-8; -*-

# def options(opt):
#     pass

# def configure(conf):
#     conf.check_nonfatal(header_name='stdint.h', define_name='HAVE_STDINT_H')

def build(bld):
    module = bld.create_ns3_module('umts', ['core'])
    module.source = [
        'model/umts-channel.cc',
	'model/umts-queue.cc',
	'model/controlpacket.cc',	
	'model/umts-phy-layer-ue.cc',
	'model/umts-phy-layer-bs.cc',
	'model/ovsfTrees.cc',
	'model/umts-mac-layer.cc',
	'model/umts-ifq-layer.cc',
	'model/umts-rlc-layer.cc',	
	'model/umts-rrc-layer-bs.cc',
	'model/umts-rrc-layer-ue.cc',
	'model/blerTable.cc',
	'model/umts-userequipment-manager.cc',
	'model/umts-basestation-manager.cc',	
	'model/cost231_model.cc',
	'model/umts-mac-header.cc',
	'model/umts-rlc-am-header.cc',
	'model/umts-rlc-um-header.cc',
	'model/umts-rlc-ack-header.cc',
	'model/umts-tags.cc',
	'model/umts-net-device.cc',	
        ]

    headers = bld(features='ns3header')
    headers.module = 'umts'
    headers.source = [
        'model/umts-manager.h',	
	'model/umts-channel.h',
	'model/umts-queue.h',
	'model/controlpacket.h',
	'model/umts-rlc-layer.h',
	'model/umts-mac-layer.h',
	'model/umts-phy-layer-ue.h',
	'model/umts-phy-layer-bs.h',
	'model/ovsfTrees.h',
	'model/umts-rrc-layer-bs.h',
	'model/umts-rrc-layer-ue.h',
	'model/umts-ifq-layer.h',
	'model/blerTable.h',
	'model/umts-userequipment-manager.h',
	'model/umts-basestation-manager.h',	
	'model/cost231_model.h',
	'model/umts-mac-header.h',
	'model/umts-rlc-am-header.h',
	'model/umts-rlc-um-header.h',
	'model/umts-rlc-ack-header.h',
	'model/umts-tags.h',
	'model/umts-net-device.h',
        ]


    # bld.ns3_python_bindings()

